Object.defineProperty(exports,"__esModule",{value:true});exports.SalesforceApiRequest=exports.STORAGE_EXPIRE_SPAN=exports.STORAGE_KEY=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();









var _reactNative=require('react-native');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var HTTP_UNAUTHORIZED=401;var STORAGE_KEY=exports.STORAGE_KEY='@SalesforceApiRequest:Credentials';var STORAGE_EXPIRE_SPAN=exports.STORAGE_EXPIRE_SPAN=1000*60*60*24;var OAUTH_REFRESH_TOKEN_GRANT_TYPE='refresh_token';var OAUTH_SALESFORCE_LOGIN_URL='https://login.salesforce.com/services/oauth2/token';var

SalesforceApiRequest=exports.SalesforceApiRequest=function(){

function SalesforceApiRequest(nativeMethods){_classCallCheck(this,SalesforceApiRequest);
this.nativeMethods=nativeMethods;
}_createClass(SalesforceApiRequest,[{key:'isLoggedIn',value:function isLoggedIn(){var credentials;return regeneratorRuntime.async(function isLoggedIn$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return regeneratorRuntime.awrap(


this.getStoredCredentials());case 2:credentials=_context.sent;return _context.abrupt('return',
credentials!=null);case 4:case'end':return _context.stop();}}},null,this);}},{key:'logOut',value:function logOut(){return regeneratorRuntime.async(function logOut$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return regeneratorRuntime.awrap(



_reactNative.AsyncStorage.removeItem(STORAGE_KEY));case 2:_context2.next=4;return regeneratorRuntime.awrap(
this.nativeMethods.logout());case 4:case'end':return _context2.stop();}}},null,this);}},{key:'getCredentials',value:function getCredentials(


parameters){var credentials;return regeneratorRuntime.async(function getCredentials$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return regeneratorRuntime.awrap(
this.getStoredCredentials());case 2:credentials=_context3.sent;if(!

credentials){_context3.next=5;break;}return _context3.abrupt('return',
credentials);case 5:_context3.next=7;return regeneratorRuntime.awrap(


this.nativeMethods.loginUser(parameters));case 7:credentials=_context3.sent;_context3.next=10;return regeneratorRuntime.awrap(
this.setCredentials(credentials));case 10:return _context3.abrupt('return',
credentials);case 11:case'end':return _context3.stop();}}},null,this);}},{key:'getStoredCredentials',value:function getStoredCredentials(


parameters){var credentials;return regeneratorRuntime.async(function getStoredCredentials$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.t0=

JSON;_context4.next=4;return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem(STORAGE_KEY));case 4:_context4.t1=_context4.sent;credentials=_context4.t0.parse.call(_context4.t0,_context4.t1);if(!(

Date.now()-credentials.issued_at>STORAGE_EXPIRE_SPAN)){_context4.next=8;break;}throw(
new Error('Storage key expired'));case 8:return _context4.abrupt('return',


credentials);case 11:_context4.prev=11;_context4.t2=_context4['catch'](0);_context4.next=15;return regeneratorRuntime.awrap(


this.logOut());case 15:return _context4.abrupt('return',

null);case 16:case'end':return _context4.stop();}}},null,this,[[0,11]]);}},{key:'setCredentials',value:function setCredentials(


credentials){return regeneratorRuntime.async(function setCredentials$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return regeneratorRuntime.awrap(
_reactNative.AsyncStorage.setItem(STORAGE_KEY,JSON.stringify(credentials)));case 2:case'end':return _context5.stop();}}},null,this);}},{key:'post',value:function post(


parameters,url,body){var fetchAction;return regeneratorRuntime.async(function post$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:
fetchAction=function fetchAction(cred){return fetch(cred.instance_url+'/services/apexrest/'+parameters.namespace+url,{
method:'post',
headers:{
'Authorization':'Bearer '+cred.access_token,
'Content-Type':'application/json',
'Accept':'application/json'},

body:JSON.stringify(body)});};_context6.next=3;return regeneratorRuntime.awrap(


this.apiCall(fetchAction,parameters,url));case 3:return _context6.abrupt('return',_context6.sent);case 4:case'end':return _context6.stop();}}},null,this);}},{key:'apiCall',value:function apiCall(


fetchAction,parameters,url){var _this=this;var credentials,processResponse,response,newCredentials;return regeneratorRuntime.async(function apiCall$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return regeneratorRuntime.awrap(
this.getCredentials(parameters));case 2:credentials=_context8.sent;

processResponse=function processResponse(response){return regeneratorRuntime.async(function processResponse$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!
response.ok){_context7.next=7;break;}_context7.next=3;return regeneratorRuntime.awrap(

response.json());case 3:_context7.t0=_context7.sent;_context7.t1=
response.status;_context7.t2=
response;return _context7.abrupt('return',{json:_context7.t0,status:_context7.t1,response:_context7.t2});case 7:throw(


response);case 8:case'end':return _context7.stop();}}},null,_this);};_context8.next=6;return regeneratorRuntime.awrap(


fetchAction(credentials));case 6:response=_context8.sent;if(!(

response.status===HTTP_UNAUTHORIZED)){_context8.next=14;break;}_context8.next=10;return regeneratorRuntime.awrap(
this.refreshToken(parameters,credentials));case 10:newCredentials=_context8.sent;_context8.next=13;return regeneratorRuntime.awrap(

fetchAction(newCredentials).then(processResponse));case 13:return _context8.abrupt('return',_context8.sent);case 14:return _context8.abrupt('return',


processResponse(response));case 15:case'end':return _context8.stop();}}},null,this);}},{key:'refreshToken',value:function refreshToken(


parameters,credentials){var refreshParams,form,response,newCredentials;return regeneratorRuntime.async(function refreshToken$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return regeneratorRuntime.awrap(


this.logOut());case 2:

refreshParams={
grant_type:OAUTH_REFRESH_TOKEN_GRANT_TYPE,
refresh_token:credentials.refresh_token,
client_id:parameters.consumerKey,
client_secret:parameters.consumerSecret};

form=Object.keys(refreshParams).map(function(k){return k+'='+encodeURIComponent(refreshParams[k]);}).join('&');_context9.next=6;return regeneratorRuntime.awrap(

fetch(OAUTH_SALESFORCE_LOGIN_URL,{
credentials:'include',
method:'post',
headers:{
'Authorization':'Bearer '+credentials.access_token,
'Accept':'application/json',
'Content-Type':'application/x-www-form-urlencoded; charset=utf-8'},

body:form}));case 6:response=_context9.sent;if(


response.ok){_context9.next=9;break;}throw(
response);case 9:_context9.next=11;return regeneratorRuntime.awrap(


response.json());case 11:newCredentials=_context9.sent;

credentials.access_token=newCredentials.access_token;_context9.next=15;return regeneratorRuntime.awrap(

this.setCredentials(credentials));case 15:return _context9.abrupt('return',

credentials);case 16:case'end':return _context9.stop();}}},null,this);}}]);return SalesforceApiRequest;}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,